{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/ChatPage/Sections/ChatCard.js","components/views/ChatPage/ChatPage.js","_actions/chat_actions.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/chat_reducer.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","GET_CHATS","AFTER_POST_MESSAGE","USER_SERVER","CHAT_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","LandingPage","Fragment","className","index_esm","style","fontSize","float","Title","Typography","LoginPage","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","width","es_form","Item","input","prefix","icon","color","placeholder","value","onChange","onBlur","border","padding","borderRadius","es_checkbox","checked","href","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","ChatCard","comment","author","sender","avatar","src","alt","content","message","substring","maxWidth","controls","datetime","tooltip","title","format","fromNow","ChatPage","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","chatMessage","hanleSearchChange","e","setState","target","renderCards","chats","map","chat","Sections_ChatCard","key","_id","onDrop","files","console","log","userData","formData","FormData","append","Axios","header","content-type","url","userId","userName","userImage","nowTime","socket","emit","submitChatMessage","preventDefault","inherits","createClass","_this2","getChats","io","on","messageFromBackEnd","messagesEnd","scrollIntoView","behavior","_this3","textAlign","margin","height","overflowY","ref","el","clear","row","layout","col","TextArea_default","dist_es","getRootProps","getInputProps","Component","connect","Menu","SubMenu","ItemGroup","LeftMenu","menu","mode","withRouter","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","display","flexDirection","alignItems","justifyContent","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","Footer_Footer","Boolean","location","hostname","match","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","chat_reducer_objectSpread","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c05eec07.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n\n\nexport const GET_CHATS = 'get_chat';\nexport const AFTER_POST_MESSAGE = 'after_post_message';\n\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/register_login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React from 'react'\nimport { FaCode } from \"react-icons/fa\";\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className=\"app\">\n            <FaCode style={{ fontSize: '4rem' }} /><br />\n            <span style={{ fontSize: '2rem' }}>Let's Start Coding!</span>\n        </div>\n        <div style={{ float:'right' }}></div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default LoginPage;\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport moment from 'moment';\nimport { Comment, Tooltip, Avatar } from 'antd';\n\nfunction ChatCard(props) {\n    return (\n        <div style={{ width: '100%' }}>\n            <Comment\n                author={props.sender.name}\n                avatar={\n                    <Avatar\n                        src={props.sender.image} alt={props.sender.name}\n                    />\n                }\n                content={\n                    props.message.substring(0, 8) === \"uploads/\" ?\n                        // this will be either video or image \n\n                        props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\n                            <video\n                                style={{ maxWidth: '200px' }}\n                                src={`http://localhost:5000/${props.message}`} alt=\"video\"\n                                type=\"video/mp4\" controls\n                            />\n                            :\n                            <img\n                                style={{ maxWidth: '200px' }}\n                                src={`http://localhost:5000/${props.message}`}\n                                alt=\"img\"\n                            />\n                        :\n                        <p>\n                            {props.message}\n                        </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n        </div>\n    )\n}\n\nexport default ChatCard;\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Row, Col, } from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, afterPostMessage } from \"../../../_actions/chat_actions\"\nimport ChatCard from \"./Sections/ChatCard\"\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nimport TextArea from 'antd/lib/input/TextArea';\nimport './ChatPage.css'\n\nexport class ChatPage extends Component {\n    state = {\n        chatMessage: \"\",\n    }\n\n    componentDidMount() {\n        let server = \"http://localhost:5000\";\n\n        this.props.dispatch(getChats());\n\n        this.socket = io(server);\n\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\n            console.log(messageFromBackEnd)\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\n        })\n    }\n\n    componentDidUpdate() {\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    hanleSearchChange = (e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n\n    renderCards = () =>\n        this.props.chats.chats\n        && this.props.chats.chats.map((chat) => (\n            <ChatCard key={chat._id}  {...chat} />\n        ));\n\n    onDrop = (files) => {\n        console.log(files)\n\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n        let formData = new FormData;\n\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n\n        formData.append(\"file\", files[0])\n\n        Axios.post('api/chat/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    let chatMessage = response.data.url;\n                    let userId = this.props.user.userData._id\n                    let userName = this.props.user.userData.name;\n                    let userImage = this.props.user.userData.image;\n                    let nowTime = moment();\n                    let type = \"VideoOrImage\"\n\n                    this.socket.emit(\"Input Chat Message\", {\n                        chatMessage,\n                        userId,\n                        userName,\n                        userImage,\n                        nowTime,\n                        type\n                    });\n                }\n            })\n    }\n\n\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n\n        let chatMessage = this.state.chatMessage\n        let userId = this.props.user.userData._id\n        let userName = this.props.user.userData.name;\n        let userImage = this.props.user.userData.image;\n        let nowTime = moment();\n        let type = \"Text\"\n\n        this.socket.emit(\"Input Chat Message\", {\n            chatMessage,\n            userId,\n            userName,\n            userImage,\n            nowTime,\n            type\n        });\n        this.setState({ chatMessage: \"\" })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <p style={{ fontSize: '2rem', textAlign: 'center' }}> Grade X</p>\n                </div>\n\n                <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n                    <div className=\"infinite-container\" style={{ height: '500px', overflowY: 'scroll' }}>\n                        {this.props.chats && (\n                            this.renderCards()\n                        )}\n                        <div\n                            ref={el => {\n                                this.messagesEnd = el;\n                            }}\n                            style={{ float: \"left\", clear: \"both\" }}\n                        />\n                    </div>\n\n                    <Row >\n                        <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n                            <Col span={18}>\n                                <TextArea\n                                    id=\"message\"\n                                    prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Let's start talking\"\n                                    type=\"text\"\n                                    value={this.state.chatMessage}\n                                    onChange={this.hanleSearchChange}\n                                />\n                            </Col>\n                            <Col span={2}>\n                                <Dropzone onDrop={this.onDrop}>\n                                    {({ getRootProps, getInputProps }) => (\n                                        <section>\n                                            <div {...getRootProps()} className=\"upload\">\n                                                <input {...getInputProps()} />\n                                                <Button>\n                                                    <Icon type=\"upload\" />\n                                                </Button>\n                                            </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                            </Col>\n\n                            <Col span={4}>\n                                <Button type=\"primary\" style={{ width: '100%' }} onClick={this.submitChatMessage} htmlType=\"submit\">\n                                    <Icon type=\"enter\" />\n                                </Button>\n                            </Col>\n                        </Form>\n                    </Row>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        chats: state.chat\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatPage);\n","import axios from 'axios';\nimport {\n    GET_CHATS,\n    AFTER_POST_MESSAGE\n} from './types';\nimport { CHAT_SERVER } from '../components/Config.js';\n\nexport function getChats(){\n    const request = axios.get(`${CHAT_SERVER}/getChats`)\n        .then(response => response.data);\n    \n    return {\n        type: GET_CHATS,\n        payload: request\n    }\n}\n\nexport function afterPostMessage(data){\n\n    return {\n        type: AFTER_POST_MESSAGE,\n        payload: data\n    }\n}\n\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"chat\">\n      <a href=\"/chat\">Chat</a>\n    </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> T3CHCHAT  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport ChatPage from \"./views/ChatPage/ChatPage\"\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div className=\"content_wrapper\" style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/chat\" component={Auth(ChatPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    GET_CHATS,\n    AFTER_POST_MESSAGE\n} from '../_actions/types';\n \nexport default function(state={},action){\n    switch(action.type){\n        case GET_CHATS:\n            return {...state, chats: action.payload }\n        case AFTER_POST_MESSAGE:\n                return {...state, chats: state.chats.concat(action.payload) }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport chat from './chat_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n    chat\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}